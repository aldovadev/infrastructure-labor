services:
  tjakra-sp-production:
    image: tjakradev/tjakra-sp-api:production
    container_name: tjakra-sp-production
    environment:
      - PORT=8800
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET_PROD}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET_PROD}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS_PROD}
      - DATABASE_URL=${DATABASE_URL_PROD}
      - TOKEN_DEFECTDOJO=${TOKEN_DEFECTDOJO_PROD}
      - ACCESS_KEY_MINIO=${ACCESS_KEY_MINIO_PROD}
      - SECRET_KEY_MINIO=${SECRET_KEY_MINIO_PROD}
      - MINIO_PUBLIC_URL=${MINIO_PUBLIC_URL_PROD}
    networks:
      - tjakra_default
    restart: unless-stopped

  tjakra-sp-staging:
    image: tjakradev/tjakra-sp-api:staging
    container_name: tjakra-sp-staging
    environment:
      - PORT=8800
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET_STAG}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET_STAG}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS_STAG}
      - DATABASE_URL=${DATABASE_URL_STAG}
      - TOKEN_DEFECTDOJO=${TOKEN_DEFECTDOJO_STAG}
      - ACCESS_KEY_MINIO=${ACCESS_KEY_MINIO_STAG}
      - SECRET_KEY_MINIO=${SECRET_KEY_MINIO_STAG}
      - MINIO_PUBLIC_URL=${MINIO_PUBLIC_URL_STAG}
    networks:
      - tjakra_default
    restart: unless-stopped

  tjakradb-sp-production:
    container_name: tjakradb-sp-production
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER_PROD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_PROD}
      - POSTGRES_DB=${POSTGRES_DB_PROD}
    volumes:
      - tjakra-sp-prod-data:/var/lib/postgresql/data
    networks:
      - tjakra_default

  tjakradb-sp-staging:
    container_name: tjakradb-sp-staging
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER_STAG}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_STAG}
      - POSTGRES_DB=${POSTGRES_DB_STAG}
    volumes:
      - tjakra-sp-stag-data:/var/lib/postgresql/data
    networks:
      - tjakra_default

networks:
  tjakra_default:
    external: true

volumes:
  tjakra-sp-prod-data:
  tjakra-sp-stag-data:
